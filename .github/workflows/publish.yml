name: Publish VS Code Extension

on: 
  push:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true

    - name: Cache Cargo registry
      uses: actions/cache@v4
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-registry-

    - name: Cache Cargo build
      uses: actions/cache@v4
      with:
        path: server/target
        key: ${{ runner.os }}-cargo-build-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-build-

    - name: Build Rust server
      run: cargo build --release
      working-directory: ./server

    - name: Upload Rust binary
      uses: actions/upload-artifact@v4
      with:
        name: stack-lang-server-${{ matrix.os }}
        path: |
          server/target/release/stack-lang-server
          server/target/release/stack-lang-server.exe

  publish:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18

    - name: Install dependencies
      run: npm install

    - name: Install vsce (Visual Studio Code Extension Manager)
      run: npm install -g @vscode/vsce

    - name: Download Rust binaries
      uses: actions/download-artifact@v4
      with:
        path: server/bin

    - name: Build the extension
      run: npm run compile

    - name: Package the extension
      run: vsce package

    - name: Publish to Visual Studio Code Marketplace
      run: |
        vsce publish --pat ${{ secrets.VSCE_PAT }}
      env:
        VSCE_PAT: ${{ secrets.VSCE_PAT }}
